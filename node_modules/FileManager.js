module.exports = (function () {

    /**
     * FileManager - gets the apps video files and returns a few convenience objects
     * @type {exports|module.exports}
     */

    /***
     * Private
     */
    var readDir = require('readdir'),
        path = require('path'),
        CONFIG = require('config');

    var FileManager = {
        /* Gets the Path containing the folders from the config module */
        getVideoPath: function (video) {
            return path.join(path.normalize(CONFIG.folders.videoRoot), video);
        }
        ,

        /**
         * Filter files in a Directory by extensions provided in the second args array
         * @param {string} pathname
         * @param {array: string} extensions
         * @returns {array: string}
         */
        getFilesArray: function (pathname, extensions) {

            return readDir.readSync(pathname, extensions, readDir.ABSOLUTE_PATHS + readDir.CASELESS_SORT);

        },

        /**
         * Get a Mapped object of the array
         * @returns {{videos: *}}
         * @constructor
         */
        getVideoData: function() {
            return {
                videos: FileManager.getFilesArray(CONFIG.folders.videoRoot, CONFIG.extensions.videos)
                    .map(function (file) {
                        return {
                            name: path.basename(file, path.extname(file)),
                            filename: path.basename(file),
                            folder: path.dirname(file),
                            path: file
                        }
                    }),
                get length() { return this.videos.length }
            }
        }

    }



return FileManager;
})
();


